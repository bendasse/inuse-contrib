{
  "$schema": "https://vega.github.io/schema/vega/v5.json",


  "width": 600,
  "height": 400,

  "signals": [

    {"name": "outerRadius","update": "min(width/2, height/(1-cos(boundaries)))"},
    {"name": "innerRadius","update": "outerRadius * 0.75"},
    {"name": "boundaries", "update": "[boundary]"},

    {"name": "usedValue","update": "min(max(minValue, mainValue), maxValue)"},
    {"name": "mainValue","value":34},
    {"name": "minValue","value":0},
    {"name": "maxValue","value":100},

    {"name": "backgroundColor","value":"#cbd1d6"},
    {"name": "fillColor","value":"#555"},

    {"name": "ticks_font_size","update": "[ticks_font_size]"},
    {"name": "value_font_size","update": "[value_font_size]"},

    {"name": "big_ticksNumber","value": "[big_ticksNumber]"},
    {"name": "small_ticksNumber","value": "[small_ticksNumber]"},
    {"name": "ticksColor","value":"#000000"},
    {"name": "tick_width","value": "[tick_width]"},
    {"name": "small_tick_size", "update" : "([small_tick_size]-1)/100"},
    {"name": "big_tick_size", "update" : "([big_tick_size]-1)/100"},


    {"name": "scale_in_gauge","value": "[scale_in_gauge]"},

    {"name": "limit1","update": "33.333"},
    {"name": "limit2","update": "66.666"},

    {"name": "color1","value": "#d95350"},
    {"name": "color2","value": "#f0ad4e"},
    {"name": "color3","value": "#5cb85c"},

    {"name": "unit","value":" [unit]"},

    {"name": "needleColor","value":"#555"},
    {"name": "needleSize","update":"10"},
    
    {"name": "showNeedle", "value": "[showNeedle]"},
    {"name": "alertColor","value": "#d95350"},
    {"name": "alertValue","value": 35},
    


    {"name": "centerX","update": "width/2"},
    {"name": "centerY","update": "outerRadius"},

    {"name": "Sboundary","update" : "-boundaries - (tick_width/2)/(maxValue - minValue)*PI"},
    {"name": "Eboundary","update" : "boundaries + (tick_width/2)/(maxValue - minValue)*PI"},

    {"name": "domain1", "update": "limit1/(maxValue-minValue)"},
    {"name": "domain2", "update": "limit2/(maxValue-minValue)"},
    {"name": "fontFactor","update": "(outerRadius/5)/25"},
    {"name": "alertStatus","update": "(mainValue < alertValue) || (maxValue < mainValue) ?  1 : 0 "}

  ],

  "data": [
    {
      "name": "big_ticks",
      "transform": [{
        "type": "sequence",
        "as": "data",
        "start":{"signal":"minValue"},
        "stop":{"signal":"maxValue + 0.01"},
        "step": {"signal":"(maxValue - minValue)/(big_ticksNumber-1)"}
      },
      {
        "type": "formula",
        "as": "radS",
        "expr": "((datum.data - tick_width/2)/(maxValue - minValue))*2*boundaries -boundaries"
      },
      {
        "type": "formula",
        "as": "radE",
        "expr": "((datum.data + tick_width/2)/(maxValue - minValue))*2*boundaries -boundaries"
      },
      {
        "type": "formula",
        "as":"radianRef",
        "expr":"(datum.data/(maxValue - minValue))*2*boundaries - boundaries + PI/2"
      },
      {
        "type": "formula",
        "as":"x",
        "expr": "centerX - cos(datum.radianRef) * (scale_in_gauge ? outerRadius*0.85 : innerRadius*0.72)"
       },
      {
        "type": "formula",
         "as":"y",
         "expr": "centerY - sin(datum.radianRef) * (scale_in_gauge ? outerRadius*0.85 : innerRadius*0.72)"
      }
    ]
    },
    {
      "name": "small_ticks",
      "transform": [{
        "type": "sequence",
        "as": "data",
        "start":{"signal":"minValue"},
        "stop":{"signal":"maxValue + 0.01"},
        "step": {"signal":"(maxValue - minValue)/(small_ticksNumber-1)"}
      },
      {
        "type": "formula",
        "as": "radS",
        "expr": "((datum.data - tick_width/2)/(maxValue - minValue))*2*boundaries -boundaries"
      },
      {
        "type": "formula",
        "as": "radE",
        "expr": "((datum.data + tick_width/2)/(maxValue - minValue))*2*boundaries -boundaries"
      }]
    }

  ],

  "scales": [
    {
      "name": "needleScale",
      "type": "linear",
      "domain":{"data": "small_ticks", "field":"data"},
      "range":[{"signal": "-boundaries*180/PI"}, {"signal": "boundaries*180/PI"}]
    }
  ],

  "marks": [
    {
      "type": "arc",
      "name": "background",
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "startAngle":{"signal": "Sboundary"},
          "endAngle":{"signal":"Eboundary"},
          "outerRadius":{"signal":"outerRadius"},
          "innerRadius":{"signal":"innerRadius"},
          "fill":{"signal":"backgroundColor"},
          "cornerRadius": {"signal": "2"}
        }
      }
    },
    {
      "type": "arc",
      "name": "Gauge",
      "encode": {
        "enter": {
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "startAngle":{"signal": "Sboundary"},
          "endAngle":{"signal":"Sboundary + 2*Eboundary*(usedValue/(maxValue-minValue))"},
          "outerRadius":{"signal":"outerRadius"},
          "innerRadius":{"signal":"innerRadius"},
          "fill":{"signal":"fillColor"},
          "cornerRadius": {"signal": "2"}
        }

      }
    },
    {
      "type": "arc",
      "description":"ticks on the arc",
      "name": "b_ticks",
      "from": {"data":"big_ticks"},
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal":"scale_in_gauge ? outerRadius : innerRadius*0.91"},
          "innerRadius":{"signal":"scale_in_gauge ? outerRadius*(0.94 - big_tick_size) : innerRadius*0.91*(0.95 - big_tick_size)"},
          "startAngle":{"data": "tick", "field":"radS"},
          "endAngle":{"data": "tick", "field":"radE"},
          "fill":{"signal":"ticksColor"},
          "cornerRadius": {"signal": "2"}
          }
      }
    },
    {
      "type": "arc",
      "description":"ticks on the arc",
      "name": "s_ticks",
      "from": {"data":"small_ticks"},
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal":"scale_in_gauge ? outerRadius : innerRadius*0.91"},
          "innerRadius":{"signal":"(scale_in_gauge ? outerRadius : innerRadius*(0.91 - small_tick_size)) * (0.98 - 0.03*(big_ticksNumber/small_ticksNumber))"},
          "startAngle":{"data": "tick", "field":"radS"},
          "endAngle":{"data": "tick", "field":"radE"},
          "fill":{"signal":"ticksColor"},
          "cornerRadius": {"signal": "2"}
          }
      }
    },
    {
      "type": "arc",
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal":"innerRadius*0.98"},
          "innerRadius":{"signal":"innerRadius*0.93"},
          "startAngle":{"signal":"Sboundary"},
          "endAngle":{"signal":"2*Eboundary*domain1 + Sboundary - 0.003*PI"},
          "fill":{"signal": "color1"},
          "cornerRadius": {"signal": "2"}
          }
      }
    },
    {
      "type": "arc",
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal":"innerRadius*0.98"},
          "innerRadius":{"signal":"innerRadius*0.93"},
          "startAngle":{"signal":"2*Eboundary*domain1 + Sboundary + 0.003*PI"},
          "endAngle":{"signal":"2*Eboundary*domain2 + Sboundary - 0.003*PI"},
          "fill":{"signal": "color2"},
          "cornerRadius": {"signal": "2"}
          }
      }
    },
    {
      "type": "arc",
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal":"innerRadius*0.98"},
          "innerRadius":{"signal":"innerRadius*0.93"},
          "startAngle":{"signal":"2*Eboundary*domain2 + Sboundary + 0.003*PI"},
          "endAngle":{"signal":"Eboundary"},
          "fill":{"signal": "color3"},
          "cornerRadius": {"signal": "2"}
          }
      }
    },
    {
      "type": "text",
      "from": {"data":"big_ticks"},
      "encode": {
        "enter":{         
          "align":{"value":"center"},
          "baseline":{"value":"alphabetic"}
        },
        "update":{
          "text":{"signal":"format(datum.data, '.0f')"},
          "x":{"field":"x"},
          "y":{"field":"y"},
          "fontSize":{"signal":"fontFactor * 9 * ticks_font_size"},
          "fill":{"signal":"ticksColor"},
          "font":{"value": "futura"}
        }
      }
    },
    {
      "type": "text",
      "description":"displayed main value at the bottom center of the gauge ",
      "name": "gaugeValue",
      "encode": {
        "enter":{
          "x":{"signal": "centerX"},
          "y": {"signal": "outerRadius - cos(boundaries)*outerRadius"},     
          "align":{"value":"center"},
          "text":{"signal":"format(mainValue, '.2f') + unit "},
          "fontSize":{"signal":"fontFactor * 14 * value_font_size"},
          "font":{"value": "futura"}
        }
      }
    },

    {
      "type": "symbol",
      "name": "needle",
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"}
        },
        "update":{
          "shape":{"signal": "'M-2.5 -2.5 Q 0 0 2.5 -2.5 L 0 -' + toString(innerRadius*0.4) + ' Z '"},
          "angle":{"signal":"usedValue", "scale":"needleScale"},
          "size":{"signal":"needleSize"},
          "stroke":{"signal":"alertStatus ? alertColor : needleColor"},
          "fill":{"signal": "alertStatus ? alertColor : needleColor"},
          "opacity" : {"signal": "showNeedle ? 1 : 0"}
        }
      }
    }
  ]
}
