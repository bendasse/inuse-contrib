{
  "$schema": "https://vega.github.io/schema/vega/v5.json",

   /* To custumize the vizualization simply change the value of the desired variable in the signals part of the code. This is the only part in which you need to do modifications. We tried to make the variable names as descriptive as possible.
  For example this line :  {"name": "unit","value":" L"} represents the units. To change the units simply change the value like so : {"name": "unit","value":" mm"}
  */

  "signals": [
    {"name": "outerRadius","update": "min(width/2, height/(1-cos(boundaries)))"},
    {"name": "boundaries","update": "3/5*PI"},

    {"name": "widths", "value": "0.2"},
    {"name": "spacing", "update": "0.015"},
    {"name": "gap", "value": "0.03"},

    {"name": "OEE_scale_color" , "value" : "#818585"},

    {"name": "backgroundColor","value": "#cbd1d6"},
    {"name": "OEE_color","value": "#6f6afc"},
    
    {"name": "performance_color","value": "#d95350"},
    {"name": "availability_color","value": "#f0ad4e"},
    {"name": "quality_color","value": "#5cb85c"},

    {"name": "performance_scale_color","value": "#818585"},
    {"name": "availability_scale_color","value": "#818585"},
    {"name": "quality_scale_color","value": "#818585"},

    {"name": "centerX","update": "width/2"},
    {"name": "centerY","update": "outerRadius"},

    {"name": "quality" , "update": "1 - obsolete_parts/total_parts"},
    {"name": "obsolete_parts" , "update": "50"},
    {"name": "total_parts" , "update": "100"},

    {"name": "availability" , "update": "1 - time_in_error/total_time_on"},
    {"name": "time_in_error" , "update": "10"},
    {"name": "total_time_on" , "update": "100"},

    {"name": "performance" , "update": "parts_produced/optimal_production"},
    {"name": "parts_produced" , "update": "80"},
    {"name": "optimal_production" , "update": "100"},

    {"name" : "OEE" , "update": "performance * quality * availability"},
    
    {"name": "fontFactor","update": "(outerRadius/5)/25"}
  ],
  "data": [
    {
      "name": "radius",
      "transform": [
        {
          "type": "sequence",
          "as": "dimensions",
          "start": {"signal": "0"},
          "stop": {
            "signal": "2 + 0.01"
          },
          "step": {"signal": "1"}
        },
        {
          "type": "formula",
          "as": "outer",
          "expr": "outerRadius * (1 - datum.dimensions*gap - datum.dimensions*widths)"
        },
        {
          "type": "formula",
          "as" : "start",
          "expr": "datum.dimensions==0 ? -boundaries : (datum.dimensions==1 ? -boundaries/3 + spacing : boundaries/3 + spacing)"

        },
        {
          "type": "formula",
          "as" : "stop",
          "expr": "datum.dimensions==0 ? -boundaries/3 - spacing : (datum.dimensions==1 ? boundaries/3 - spacing : boundaries)"

        },
        {
          "type": "formula",
          "as": "inner",
          "expr": "datum.outer - widths*outerRadius"
        },
		    {
          "type": "formula",
          "as": "scale_colours",
          "expr": "datum.dimensions==0 ? performance_scale_color : (datum.dimensions==1 ? availability_scale_color : quality_scale_color)"
        },
		    {
          "type": "formula",
          "as": "colours",
          "expr": "datum.dimensions==0 ? performance_color : (datum.dimensions==1 ? availability_color : quality_color)"
        },
        {
          "type": "formula",
          "as": "variable",
          "expr": "min(max((datum.dimensions==0 ? performance : (datum.dimensions==1 ? availability : quality)), 0),1)"
        },
        {
          "type": "formula",
          "as": "size",
          "expr": "datum.dimensions==1 ? boundaries/3-spacing : boundaries/3-spacing/2"
        },
        {
          "type": "formula",
          "as": "end",
          "expr": "datum.start + 2*datum.variable* datum.size"
        },
        {
          "type": "formula",
          "as": "legend",
          "expr": "datum.dimensions==0 ? 'QUAL : ' +quality: (datum.dimensions==1 ? 'AVAL : '+availability : 'PERF : '+performance)"
        },
        {
          "type": "formula",
          "as": "x",
          "expr": "centerX - sin((datum.start+datum.stop)/2)*outerRadius*(1-widths/1.5)"
        },
        {
          "type": "formula",
          "as": "y",
          "expr": "centerY - cos((datum.start+datum.stop)/2)*outerRadius*(1-widths/1.5)"
        },
        {
          "type": "formula",
          "as": "angle",
          "expr": "((datum.start+datum.stop)/2)*-180/PI"
        }
      ]
    }
  ],

  "marks": [
    {
      "type": "arc",
      "name": "scales",
      "from": {"data":"radius"},
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal": "outerRadius"},
          "innerRadius":{"signal": "outerRadius*(1-widths)"},
          "startAngle":{"data": "radius", "field":"start"},
          "endAngle":{"data": "radius", "field":"stop"},
          "fill":{"data": "radius", "field":"scale_colours"},
          "cornerRadius": {"signal": "2"}
        }
      }
    },
    {
      "type": "arc",
      "name": "values",
      "from": {"data":"radius"},
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal": "outerRadius"},
          "innerRadius":{"signal": "outerRadius*(1-widths)"},
          "startAngle":{"data": "radius", "field":"start"},
          "endAngle":{"data": "radius", "field":"end"},
          "fill":{"data": "radius", "field":"colours"},
          "cornerRadius": {"signal": "2"}
        }
      }
    },
    {
      "type": "arc",
      "name": "OEE scale",
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal": "outerRadius*(1 - widths - gap)"},
          "innerRadius":{"signal": "outerRadius*(1-2*widths - gap)"},
          "startAngle":{"signal": "-boundaries"},
          "endAngle":{"signal": "boundaries"},
          "fill":{"signal": "OEE_scale_color"},
          "cornerRadius": {"signal": "2"}
        }
      }
    },
    {
      "type": "arc",
      "name": "OEE",
      "encode": {
        "enter":{
          "x":{"signal":"centerX"},
          "y":{"signal":"centerY"},
          "outerRadius":{"signal": "outerRadius*(1 - widths - gap)"},
          "innerRadius":{"signal": "outerRadius*(1-2*widths - gap)"},
          "startAngle":{"signal": "-boundaries"},
          "endAngle":{"signal": "(2*OEE-1)*boundaries"},
          "fill":{"signal": "OEE_color"},
          "cornerRadius": {"signal": "2"}
        }
      }
    },
    {
      "type": "text",
      "description":"displayed main value at the bottom center of the gauge ",
      "name": "OEE Value",
      "encode": {
        "enter":{
          "x":{"signal": "centerX"},
          "y": {"signal": "outerRadius"},     
          "align":{"value":"center"},
          "text":{"signal":"'OEE' + ' : ' + format(OEE, '.2f')"},
          "fontSize":{"signal":"fontFactor * 14"},
          "font":{"value": "futura"}
        }
      }
    },
    {
      "type": "text",
      "description":"Displays hte values of each factor",
      "name": "lengend",
      "from": {"data": "radius"},
      "encode": {
        "enter":{
          "align" :{"value": "center"},
          "x": {"data": "radius", "field":"x"},
          "y": {"data": "radius", "field":"y"},     
          "text":{"data": "radius", "field":"legend"},
          "fontSize":{"signal":"18*widths/0.18"},
          "font":{"value": "futura"},
          "angle" : {"data": "radius", "field":"angle"}
        }
      }
    }
  ]
}
